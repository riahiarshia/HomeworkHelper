name: Deploy to Azure Staging

on:
  push:
    branches: [ staging, develop ]
  workflow_dispatch:  # Allow manual triggers

env:
  NODE_VERSION: '18.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: 
      name: staging
      url: https://homework-helper-staging.azurewebsites.net
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: 'Set up Node.js'
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: 'Install dependencies'
      run: |
        cd backend
        npm ci

    - name: 'Run tests (if any)'
      run: |
        cd backend
        echo "Skipping tests in CI environment - tests require database connection"
        # npm test --if-present

    - name: 'Build application'
      run: |
        cd backend
        npm run build --if-present

    - name: 'Prepare deployment package'
      run: |
        # Create a deployment directory with backend files
        mkdir -p deployment
        cp -r backend/* deployment/
        # Ensure .deployment file is present
        cp backend/.deployment deployment/ || echo "No .deployment file found"
        # Create a simple package.json in root if needed
        if [ ! -f deployment/package.json ]; then
          echo "No package.json found in backend!"
          exit 1
        fi
        echo "Deployment package prepared"

    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Deploy to Azure Web App'
      uses: azure/webapps-deploy@v2
      with:
        app-name: homework-helper-staging
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: deployment/
        deployment-method: zip

    - name: 'Verify deployment'
      run: |
        echo "Waiting for deployment to complete..."
        sleep 30
        
        # Test health endpoint
        response=$(curl -s -o /dev/null -w "%{http_code}" https://homework-helper-staging.azurewebsites.net/api/health)
        
        if [ $response -eq 200 ]; then
          echo "‚úÖ Deployment successful! App is responding."
        else
          echo "‚ö†Ô∏è Deployment completed but app may still be starting up. HTTP Status: $response"
        fi

    - name: 'Post-deployment notification'
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "üéâ Staging deployment successful!"
          echo "üåê Backend: https://homework-helper-staging.azurewebsites.net"
          echo "üéØ Admin: https://homework-helper-staging.azurewebsites.net/admin"
        else
          echo "‚ùå Staging deployment failed!"
        fi
